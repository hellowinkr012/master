
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    if connection.is_connected():
        db_Info = connection.get_server_info()
        print("Connected to MySQL Server version ", db_Info)
        cursor = connection.cursor()
        cursor.execute("select database()")
        record = cursor.fetchone()
        print("You're connected to database: ", record)

except Error as e:
    print("Error while connecting to MySQL", e)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_Create_Table_Query = """CREATE TABLE Laptop ( 
                             Id int(11) NOT NULL,
                             Name varchar(250) NOT NULL,
                             Price float NOT NULL,
                             Purchase_date Date NOT NULL,
                             PRIMARY KEY (Id)) """

    cursor = connection.cursor()
    result = cursor.execute(mySql_Create_Table_Query)
    print("Laptop Table created successfully ")

except mysql.connector.Error as error:
    print("Failed to create table in MySQL: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                           VALUES 
                           (10, 'Lenovo ThinkPad P71', 30459, '2019-08-14') """

    cursor = connection.cursor()
    cursor.execute(mySql_insert_query)
    connection.commit()
    print(cursor.rowcount, "Record inserted successfully into Laptop table")
    cursor.close()

except mysql.connector.Error as error:
    print("Failed to insert record into Laptop table {}".format(error))

finally:
    if (connection.is_connected()):
        connection.close()
        print("MySQL connection is closed")

import mysql.connector
from mysql.connector import Error

def insertVariblesIntoTable(id, name, price, purchase_date):
    try:
        connection = mysql.connector.connect(host='localhost',
                                             database='Electronics',
                                             user='user1',
                                             password='user123')
        cursor = connection.cursor()
        mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                                VALUES (%s, %s, %s, %s) """

        recordTuple = (id, name, price, purchase_date)
        cursor.execute(mySql_insert_query, recordTuple)
        connection.commit()
        print("Record inserted successfully into Laptop table")

    except mysql.connector.Error as error:
        print("Failed to insert into MySQL table {}".format(error))

    finally:
        if (connection.is_connected()):
            cursor.close()
            connection.close()
            print("MySQL connection is closed")

insertVariblesIntoTable(2, 'Area 51M', 60999, '2019-04-14')
insertVariblesIntoTable(3, 'MacBook Pro', 200499, '2019-06-20')
+--------------------+
| Database           |
+--------------------+
| information_schema |
| electronics        |
| hospital_db        |
| mydatabase         |
| mysql              |
| performance_schema |
| products_db        |
| southwind          |
| sys                |
+--------------------+

mysql> use electonics;
ERROR 1049 (42000): Unknown database 'electonics'
mysql> use electronics;
Database changed
mysql> show tables;
+-----------------------+
| Tables_in_electronics |
+-----------------------+
| laptop                |
+-----------------------+

mysql> select * from laptop;
+----+---------------------+--------+---------------+
| Id | Name                | Price  | Purchase_date |
+----+---------------------+--------+---------------+
|  2 | Area 51M            |  60999 | 2019-04-14    |
|  3 | MacBook Pro         | 200499 | 2019-06-20    |
| 10 | Lenovo ThinkPad P71 |  30459 | 2019-08-14    |
+----+---------------------+--------+---------------+

mysql>
o	To display all DepName along with the DepCde in descending order of DepCde.
o	To display the average age of Employees in DepCde as 103.
o	To display the name of DepHead of the Employee named “Sanjeev P”
o	To display the details of all employees who has joined before 2007 from EMPL¬OYEE table.
(b)	Give the output of the following SQL queries: 
o	SELECT COUNT (DISTINCT DepCde) FROM EMPLOYEE;
o	SELECT MAX(JoinDate), MIN (JointDate) FROM EMPLOYEE;
o	SELECT TName, DepHead FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DepCde = D.DepCde;
o	SELECT COUNT (*) FROM EMPLOYEE WHERE Salary > 60000 AND Age > 30;
(a) 0.0012 /°C
(b) 0.0024 /°C
(c) 0.0032 /°C
(d) 0.0064 /°C

(a) Increasing
(b)   Decreasing
(c) Neither increasing nor decreasing
(d) None of these
the standard change in enthalpy ΔH°(298) of formation of CuO.

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                           VALUES (%s, %s, %s, %s) """

    records_to_insert = [(4, 'HP Pavilion Power', 1999, '2019-01-11'),
                         (5, 'MSI WS75 9TL-496', 5799, '2019-02-27'),
                         (6, 'Microsoft Surface', 2330, '2019-07-23')]

    cursor = connection.cursor()
    cursor.executemany(mySql_insert_query, records_to_insert)
    connection.commit()
    print(cursor.rowcount, "Record inserted successfully into Laptop table")

except mysql.connector.Error as error:
    print("Failed to insert record into MySQL table {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")

import mysql.connector
from mysql.connector import Error
from datetime import datetime

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                            VALUES (%s, %s, %s, %s) """

    cursor = connection.cursor()
    current_Date = datetime.now()
    # convert date in the format you want
    formatted_date = current_Date.strftime('%Y-%m-%d')
    insert_tuple = (7, 'Acer Predator Triton', 29435, formatted_date)

    result = cursor.execute(mySql_insert_query, insert_tuple)
    connection.commit()
    print("Date Record inserted successfully")

except mysql.connector.Error as error:
    connection.rollback()
    print("Failed to insert into MySQL table {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    sql_select_Query = "select * from Laptop"
    cursor = connection.cursor()
    cursor.execute(sql_select_Query)
    records = cursor.fetchall()
    print("Total number of rows in Laptop is: ", cursor.rowcount)

    
    print("\nPrinting each laptop record")
    for row in records:
        print("Id = ", row[0], )
        print("Name = ", row[1])
        print("Price  = ", row[2])
        print("Purchase date  = ", row[3], "\n")

except Error as e:
    print("Error reading data from MySQL table", e)
finally:
    if (connection.is_connected()):
        connection.close()
        cursor.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

def getLaptopDetail(id):
    try:
        mySQLConnection = mysql.connector.connect(host='localhost',
                                                  database='Electronics',
                                                  user='user1',
                                                  password='user123')

        cursor = mySQLConnection.cursor(buffered=True)
        sql_select_query = """select * from laptop where id = %s"""
        cursor.execute(sql_select_query, (id,))
        record = cursor.fetchall()

        for row in record:
            print("Id = ", row[0], )
            print("Name = ", row[1])
            print("Join Date = ", row[2])
            print("Salary  = ", row[3], "\n")

    except mysql.connector.Error as error:
        print("Failed to get record from MySQL table: {}".format(error))

    finally:
        if (mySQLConnection.is_connected()):
            cursor.close()
            mySQLConnection.close()
            print("MySQL connection is closed")

id1 = 1
id2 = 2
getLaptopDetail(id1)
getLaptopDetail(id2)

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    mySql_select_Query = "select * from laptop"
    cursor = connection.cursor(buffered=True)
    cursor.execute(mySql_select_Query)
    fetching_size = 2
    records = cursor.fetchmany(fetching_size)

    print("Total number of rows is: ", cursor.rowcount)
    print("Printing ", fetching_size, " Laptop record using cursor.fetchmany")
    for row in records:
        print("Id = ", row[0], )
        print("Name = ", row[1])
        print("Join Date = ", row[2])
        print("Salary  = ", row[3], "\n")

except Error as e:
    print("Error while connecting to MySQL", e)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("connection is closed")

Id =  1
Name =  Lenovo ThinkPad P71

Id =  2
Name =  Area 51M

Id =  3
Name =  MacBook Pro

Id =  4
Name =  HP Pavilion Power

Id =  5
Name =  MSI WS75 9TL-496

Id =  6
Name =  Microsoft Surface

Id =  7
Name =  Acer Predator Triton

MySQL connection is closed
Id =  1
Name =  Lenovo ThinkPad P71
Join Date =  30459.0
Salary  =  2019-08-14 

Id =  2
Name =  Area 51M
Join Date =  60999.0
Salary  =  2019-04-14 

connection is closed
(b) Give the output of the following SQL queries :
W,PAYLEVEL P WHERE W.LEVEL=
WHERE PLEVEL=”POO3″;
whose pH is 4.60.
(a) 2.5 X 10^-4  mol/L
(b)2.5 X 10^-5  mol/L
(c) 1.5 X 10^-5  mol/L
(d) 1.5 X 10^-4  mol/L
WHERE PLEVEL=”POO3″;
WHERE PLEVEL=”POO3″;
WHERE PLEVEL=”POO3″;

MCP : 19
CCP : (B) 2.5 X 10 ^ (-5)
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    mySql_select_Query = "select * from laptop"
    cursor = connection.cursor(buffered=True)
    cursor.execute(mySql_select_Query)
    record = cursor.fetchone()
    
    print("Id = ", record[0] )
    print("Name = ", record[1])
    print("Price = ", record[2])
    print("Purchase_date  = ", record[3], "\n")
    

except mysql.connector.Error as error:
    print("Error while connecting to MySQL", error)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
#  instead of a column id

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    sql_select_Query = "select * from Laptop"
    # MySQLCursorDict creates a cursor that returns rows as dictionaries
    cursor = connection.cursor(dictionary=True)
    cursor.execute(sql_select_Query)
    records = cursor.fetchall()
    
    print("Fetching each row using column name")

    for row in records:
        id = row["Id"]
        name = row["Name"]
        price = row["Price"]
        purchase_date = row["Purchase_date"]
        print(id, name, price, purchase_date)

except Error as e:
    print("Error reading data from MySQL table", e)
finally:
    if (connection.is_connected()):
        connection.close()
        cursor.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    sql_Query = "select price from laptop where id = %s"
    id = (1,)

    cursor = connection.cursor()
    cursor.execute(sql_Query, id)
    record = cursor.fetchone()

    # selecting column value into varible
    price = float(record[0])
    print("Laptop price is : ", price)

except mysql.connector.Error as error:
    print("Failed to get record from database: {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()

    print("Before updating a record ")
    sql_select_query = """select * from Laptop where id = 6"""
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

    # Update single record now
    sql_update_query = """Update Laptop set Price = 101499 where id = 6"""
    cursor.execute(sql_update_query)
    connection.commit()
    print("Record Updated successfully ")

    print("After updating record ")
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

except mysql.connector.Error as error:
    print("Failed to update table record: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

def updateLaptopPrice(id, price):
    try:
        connection = mysql.connector.connect(host='localhost',
                                             database='electronics',
                                             user='user1',
                                             password='user123')

        cursor = connection.cursor()
        sql_update_query = """Update laptop set price = %s where id = %s"""
        inputData = (price, id)
        cursor.execute(sql_update_query, inputData)
        connection.commit()
        print("Record Updated successfully ")

    except mysql.connector.Error as error:
        print("Failed to update record to database: {}".format(error))
    finally:
        if (connection.is_connected()):
            cursor.close()
            connection.close()
            print("MySQL connection is closed")

updateLaptopPrice(4, 45000)
updateLaptopPrice(5, 145000)
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Price = %s where id = %s"""

    # multiple records to be updated in tuple format
    records_to_update = [(30000, 3), (28750, 4)]
    cursor.executemany(sql_update_query, records_to_update)
    connection.commit()

    print(cursor.rowcount, "Records of a laptop table updated successfully")

except mysql.connector.Error as error:
    print("Failed to update records to database: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Name = %s, Price = %s where id = %s"""

    name = "HP Pavilion"
    price = 28200
    id = 4
    input = (name, price, id)

    cursor.execute(sql_update_query, input)
    connection.commit()
    print("Multiple column updated successfully ")

except mysql.connector.Error as error:
    print("Failed to update record to database: {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")

import mysql.connector
from mysql.connector import Error
from datetime import datetime

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Purchase_date = %s where id = %s"""

    current_Date = datetime.now()
    formatted_date = current_Date.strftime('%Y-%m-%d')
    id = 2
    input = (formatted_date, id)
    cursor.execute(sql_update_query, input)
    connection.commit()
    print("Purchased Date Updated successfully ")

except mysql.connector.Error as error:
    print("Failed to update purchased date {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("connection is closed")
Sep-2007′, ’21-Apr-1983’
(c) Give the output of the following SQL  queries :
FROM EMPLOYEE GROUP BY
SGRADE;
EMPLOYEE E, SAL-GRADE S WHERE
E.SGRADE=    S.SGRADE AND E.ECODE<103′;

     ORDER BY DOJ DESC ;

     FROM EMPLOYEE
     WHERE SGRADE IN ("S02" , "S03") ;
     EMPLOYEE , SALGRADE 
     WHERE EMPLOYEE.SGRADE = SALGRADE.SGRADE
     AND DOJ BETWEEN
    "2006-02-09" AND "2009-08-08" ;

      VALUES ( 109 , "HarishRoy" , "HEAD-IT" , "S0X" , "2007-09-09" , "1983-04-21") ;
(a) 5 A
(b) 5 √3  / 2 A
(c) 5 √(3 /2) A
(d) 5 √(27/8) A
    (a) 36.5 g
    (b) 73 g
    (c) 50 g
    (d) 100 g

MCP : 24
CCP : 36.5 g
(b) Give the output of the following SQL queries:
WHERE A.Acode=C.Acode AND A.Parti- cipants Num=10;
    (a) 28 g
    (b) 22 g
    (c) 44 g
    (d) 72 g
(b)Give output for the following SQL queries:
ORDERBY STARTDATE,
OWNEDBY Where PLACE LIKE “%A”;

(a) 3    
(b) 2
(c) infinitely many 
(d) no value of k satisfies the requirement.
and the other 75.7 % of the element. Determine the equivalent
masses of arsenic in both cases.
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    print("Displaying laptop record Before Deleting it")

    
    sql_select_query = """select * from Laptop where id = 7"""
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

    sql_Delete_query = """Delete from Laptop where id = 7"""
    cursor.execute(sql_Delete_query)
    connection.commit()

    cursor.execute(sql_select_query)
    records = cursor.fetchall()
    
    if len(records) == 0:
        print("\nRecord Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to delete record from table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
#  to delete a row from MySQL table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    sql_Delete_query = """Delete from Laptop where id = %s"""
    laptopId = 6
    cursor.execute(sql_Delete_query, (laptopId,))
    connection.commit()
    print("Record Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to Delete record from table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode

try:
    connection = mysql.connector.connect(host='localhost',
                                   database='electronics',
                                   user='user1',
                                   password='user123')

    cursor = connection.cursor()
    sql_Delete_query = """Delete from Laptop where id = %s"""
    records_to_delete = [(5,), (4,)]
    cursor.executemany(sql_Delete_query, records_to_delete)
    connection.commit()
    print(cursor.rowcount, " Record Deleted successfully")

except mysql.connector.Error as error:
    print("Failed to Delete records from MySQL table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    Delete_all_rows = """truncate table Laptop """
    cursor.execute(Delete_all_rows)
    connection.commit()
    print("All Record Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to Delete all records from database table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    alter_column = """ALTER TABLE Laptop DROP COLUMN Purchase_date"""
    cursor.execute(alter_column)
    connection.commit()
    print("Column Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to Delete column: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
                        THE MAIN FUNCTION OF PROGRAM
***********************************************"""

Welcome()

while True:
print (3*"\n",100*"=")
print ("""MAIN MENU

    1. New Account
    2. Deposit Amount
    3. Withdraw Amount
    4. Balance Enquiry
    5. All Account Holder List
    6. Close An Account
    7. Modify An Account
    8. Exit
    """)

try:
ch=input("Enter Your Choice(1~8): ")
if ch==1:
write_account()

elif ch==2:
num=input("\n\nEnter Account Number: ")
deposit_withdraw(num,1)


elifch==3:
num=input("\n\nEnter Account Number: ")
deposit_withdraw(num,2)

elif ch==4:
num=input("\n\nEnter Account Number: ")
display_sp(num)

elif ch==5:
display_all()

elif ch==6:
num=input("\n\nEnter Account Number: ")
delete_account(num)

elif ch==7:
num=input("\n\nEnter Account Number: ")
modify_account(num)

elif ch==8:
break

else:
print ("Input correcr choice...(1-8))"

except NameError:
print ("Input correct choice...(1-8))"


input("\n\n\n\n\nTHANK YOU\n\nPress any key to exit...")
