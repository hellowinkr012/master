[4:01 PM, 11/23/2020] Vinod Sir: # mysql_connection1.py
import mysql.connector


mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123'
)

print(mydb)
[4:02 PM, 11/23/2020] Vinod Sir: # mysql_connection2.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123'
)

mycursor = mydb.cursor()

mycursor.execute("CREATE DATABASE mydatabase")
[4:02 PM, 11/23/2020] Vinod Sir: # mysql_connection3.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123'
)

mycursor = mydb.cursor()

mycursor.execute("SHOW DATABASES")

for x in mycursor:
    print(x)
[4:02 PM, 11/23/2020] Vinod Sir: # mysql_connection4.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)
[4:02 PM, 11/23/2020] Vinod Sir: # mysql_connection5.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("CREATE TABLE customers (name VARCHAR(255), address VARCHAR(255))")
[4:02 PM, 11/23/2020] Vinod Sir: # mysql_connection6.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("SHOW TABLES")

for x in mycursor:
    print(x)
[4:03 PM, 11/23/2020] Vinod Sir: # mysql_connection7.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("ALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT PRIMARY KEY FIRST")
[4:03 PM, 11/23/2020] Vinod Sir: # mysql_connection8.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "INSERT INTO customers (name, address) VALUES (%s, %s)"
val = ("John", "Highway 21")
mycursor.execute(sql, val)

mydb.commit()

print(mycursor.rowcount, "record inserted.")
[4:03 PM, 11/23/2020] Vinod Sir: # mysql_connection9.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "INSERT INTO customers (name, address) VALUES (%s, %s)"
val = [
  ('Peter', 'Lowstreet 4'),
  ('Amy', 'Apple st 652'),
  ('Hannah', 'Mountain 21'),
  ('Michael', 'Valley 345'),
  ('Sandy', 'Ocean blvd 2'),
  ('Betty', 'Green Grass 1'),
  ('Richard', 'Sky st 331'),
  ('Susan', 'One way 98'),
  ('Vicky', 'Yellow Garden 2'),
  ('Ben', 'Park Lane 38'),
  ('William', 'Central st 954'),
  ('Chuck', 'Main Road 989'),
  ('Viola', 'Sideway 1633')
]

mycursor.executemany(sql, val)

mydb.commit()

print(mycursor.rowcount, "records were inserted.")
[4:03 PM, 11/23/2020] Vinod Sir: # mysql_connection10.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "INSERT INTO customers (name, address) VALUES (%s, %s)"
val = ("Michelle", "Blue Village")
mycursor.execute(sql, val)

mydb.commit()

print("1 record inserted, ID:", mycursor.lastrowid)
[4:03 PM, 11/23/2020] Vinod Sir: # mysql_connection11.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("SELECT * FROM customers")

myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:04 PM, 11/23/2020] Vinod Sir: # mysql_connection12.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("ALTER TABLE customers MODIFY id INT auto_increment FIRST")

mycursor.execute("DESCRIBE customers")

for x in mycursor:
    print(x)
[4:05 PM, 11/23/2020] Vinod Sir: # mysql_connection13.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("SELECT name, address FROM customers")

myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:05 PM, 11/23/2020] Vinod Sir: # mysql_connection14.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

mycursor.execute("SELECT * FROM customers")

myresult = mycursor.fetchone()

print(myresult)
[4:05 PM, 11/23/2020] Vinod Sir: # mysql_connection15.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "SELECT * FROM customers WHERE address ='Park Lane 38' "

mycursor.execute(sql)

myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:05 PM, 11/23/2020] Vinod Sir: # mysql_connection17.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "SELECT * FROM customers WHERE address = %s"
adr = ("Yellow Garden 2", )

mycursor.execute(sql, adr)


myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection16.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "SELECT * FROM customers WHERE address LIKE '%way%' "

mycursor.execute(sql)

myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection18.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "SELECT * FROM customers ORDER BY name DESC"

mycursor.execute(sql)

myresult = mycursor.fetchall()

for x in myresult:
    print(x)
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection19.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "DELETE FROM customers WHERE address = 'Mountain 21'"

mycursor.execute(sql)

mydb.commit()

print(mycursor.rowcount, "record(s) deleted")
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection20.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "DELETE FROM customers WHERE address = %s"
adr = ("Yellow Garden 2", )

mycursor.execute(sql, adr)

mydb.commit()

print(mycursor.rowcount, "record(s) deleted")
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection21.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "DROP TABLE customers"

mycursor.execute(sql)
[4:06 PM, 11/23/2020] Vinod Sir: # mysql_connection22.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()

sql = "UPDATE customers SET address = 'Canyon 123' WHERE address = 'Valley 345'"

mycursor.execute(sql)

mydb.commit()

print(mycursor.rowcount, "record(s) affected")
[4:07 PM, 11/23/2020] Vinod Sir: # mysql_connection23.py
import mysql.connector

mydb = mysql.connector.connect (
    host = 'localhost',
    user = 'user1',
    password = 'user123',
    database = 'mydatabase'
)

mycursor = mydb.cursor()
mycursor.execute("SELECT * FROM customers LIMIT 5 OFFSET 2")

myresult = mycursor.fetchall()

for x in myresult:
 




 [11:49 AM, 11/25/2020] Vinod Sir: # Connecting to MySQL server

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    if connection.is_connected():
        db_Info = connection.get_server_info()
        print("Connected to MySQL Server version ", db_Info)
        cursor = connection.cursor()
        cursor.execute("select database()")
        record = cursor.fetchone()
        print("You're connected to database: ", record)

except Error as e:
    print("Error while connecting to MySQL", e)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:57 AM, 11/25/2020] Vinod Sir: https://us05web.zoom.us/j/82398632131?pwd=SnlUaEw1UFdua3EwamFqTURlcmtndz09
[12:20 PM, 11/25/2020] Vinod Sir: # Create table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_Create_Table_Query = """CREATE TABLE Laptop ( 
                             Id int(11) NOT NULL,
                             Name varchar(250) NOT NULL,
                             Price float NOT NULL,
                             Purchase_date Date NOT NULL,
                             PRIMARY KEY (Id)) """

    cursor = connection.cursor()
    result = cursor.execute(mySql_Create_Table_Query)
    print("Laptop Table created successfully ")

except mysql.connector.Error as error:
    print("Failed to create table in MySQL: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[12:21 PM, 11/25/2020] Vinod Sir: #  insert a single row/record into MySQL table
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                           VALUES 
                           (1, 'Lenovo ThinkPad P71', 30459, '2019-08-14') """

    cursor = connection.cursor()
    cursor.execute(mySql_insert_query)
    connection.commit()
    print(cursor.rowcount, "Record inserted successfully into Laptop table")
    cursor.close()

except mysql.connector.Error as error:
    print("Failed to insert record into Laptop table {}".format(error))

finally:
    if (connection.is_connected()):
        connection.close()
        print("MySQL connection is closed")
[12:21 PM, 11/25/2020] Vinod Sir: # Using Python variables in a MySQL INSERT query

import mysql.connector
from mysql.connector import Error

def insertVariblesIntoTable(id, name, price, purchase_date):
    try:
        connection = mysql.connector.connect(host='localhost',
                                             database='Electronics',
                                             user='user1',
                                             password='user123')
        cursor = connection.cursor()
        mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                                VALUES (%s, %s, %s, %s) """

        recordTuple = (id, name, price, purchase_date)
        cursor.execute(mySql_insert_query, recordTuple)
        connection.commit()
        print("Record inserted successfully into Laptop table")

    except mysql.connector.Error as error:
        print("Failed to insert into MySQL table {}".format(error))

    finally:
        if (connection.is_connected()):
            cursor.close()
            connection.close()
            print("MySQL connection is closed")

insertVariblesIntoTable(2, 'Area 51M', 60999, '2019-04-14')
insertVariblesIntoTable(3, 'MacBook Pro', 200499, '2019-06-20')
[12:21 PM, 11/25/2020] Vinod Sir: # Python program to INSERT multiple rows into a MySQL table

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                           VALUES (%s, %s, %s, %s) """

    records_to_insert = [(4, 'HP Pavilion Power', 19990, '2019-01-11'),
                         (5, 'MSI WS75 9TL-496', 57990, '2019-02-27'),
                         (6, 'Microsoft Surface', 23300, '2019-07-23')]

    cursor = connection.cursor()
    cursor.executemany(mySql_insert_query, records_to_insert)
    connection.commit()
    print(cursor.rowcount, "Record inserted successfully into Laptop table")

except mysql.connector.Error as error:
    print("Failed to insert record into MySQL table {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[12:22 PM, 11/25/2020] Vinod Sir: # Python Insert timestamp and DateTime into a MySQL table

import mysql.connector
from mysql.connector import Error
from datetime import datetime

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_insert_query = """INSERT INTO Laptop (Id, Name, Price, Purchase_date) 
                            VALUES (%s, %s, %s, %s) """

    cursor = connection.cursor()
    current_Date = datetime.now()
    # convert date in the format you want
    formatted_date = current_Date.strftime('%Y-%m-%d')
    insert_tuple = (7, 'Acer Predator Triton', 29435, formatted_date)

    result = cursor.execute(mySql_insert_query, insert_tuple)
    connection.commit()
    print("Date Record inserted successfully")

except mysql.connector.Error as error:
    connection.rollback()
    print("Failed to insert into MySQL table {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[12:23 PM, 11/25/2020] Vinod Sir: # Python Select from MySQL Table

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    sql_select_Query = "select * from Laptop"
    cursor = connection.cursor()
    cursor.execute(sql_select_Query)
    records = cursor.fetchall()
    print("Total number of rows in Laptop is: ", cursor.rowcount)

    
    
    print("\nPrinting each laptop record")
    for row in records:
        print("Id = ", row[0], )
        print("Name = ", row[1])
        print("Price  = ", row[2])
        print("Purchase date  = ", row[3], "\n")

except Error as e:
    print("Error reading data from MySQL table", e)
finally:
    if (connection.is_connected()):
        connection.close()
        cursor.close()
        print("MySQL connection is closed


[11:13 AM, 11/28/2020] Vinod Sir: # A parameterized query is a query
import mysql.connector
from mysql.connector import Error

def getLaptopDetail(id):
    try:
        mySQLConnection = mysql.connector.connect(host='localhost',
                                                  database='Electronics',
                                                  user='user1',
                                                  password='user123')

        cursor = mySQLConnection.cursor(buffered=True)
        sql_select_query = "select * from Laptop where id = %s"
        cursor.execute(sql_select_query, (id,))
        record = cursor.fetchall()

        for row in record:
            print("Id = ", row[0], )
            print("Name = ", row[1])
            print("Join Date = ", row[2])
            print("Salary  = ", row[3], "\n")

    except mysql.connector.Error as error:
        print("Failed to get record from MySQL table: {}".format(error))

    finally:
        if (mySQLConnection.is_connected()):
            cursor.close()
            mySQLConnection.close()
            print("MySQL connection is closed")

id1 = 1
id2 = 2
getLaptopDetail(id1)
getLaptopDetail(id2)
[11:13 AM, 11/28/2020] Vinod Sir: # Select limited rows from MySQL table using fetchmany and fetchone

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_select_Query = "select * from Laptop"
    cursor = connection.cursor(buffered=True)
    cursor.execute(mySql_select_Query)
    fetching_size = 2
    records = cursor.fetchmany(fetching_size)

    print("Total number of rows is: ", cursor.rowcount)
    print("Printing ", fetching_size, " Laptop record using cursor.fetchmany")
    for row in records:
        print("Id = ", row[0], )
        print("Name = ", row[1])
        print("Join Date = ", row[2])
        print("Salary  = ", row[3], "\n")

except Error as e:
    print("Error while connecting to MySQL", e)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("connection is closed")
[11:13 AM, 11/28/2020] Vinod Sir: # Fetch single row from MySQL table using cursor’s fetchone
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    mySql_select_Query = "select * from Laptop"
    cursor = connection.cursor(buffered=True)
    cursor.execute(mySql_select_Query)
    record = cursor.fetchone()
    
    print("Id = ", record[0] )
    print("Name = ", record[1])
    print("Price = ", record[2])
    print("Purchase_date  = ", record[3], "\n")
    

except mysql.connector.Error as error:
    print("Error while connecting to MySQL", error)
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:14 AM, 11/28/2020] Vinod Sir: # Fetch MySQL data using the column names
#  instead of a column id

import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    sql_select_Query = "select * from Laptop"
    # MySQLCursorDict creates a cursor that returns rows as dictionaries
    cursor = connection.cursor(dictionary=True)
    cursor.execute(sql_select_Query)
    records = cursor.fetchall()
    
    print("Fetching each row using column name")

    for row in records:
        id = row["Id"]
        name = row["Name"]
        price = row["Price"]
        purchase_date = row["Purchase_date"]
        print(id, name, price, purchase_date)

except Error as e:
    print("Error reading data from MySQL table", e)
finally:
    if (connection.is_connected()):
        connection.close()
        cursor.close()
        print("MySQL connection is closed")
[11:14 AM, 11/28/2020] Vinod Sir: # Python MySQL Select column value into a Python Variable
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    sql_Query = "select price from Laptop where id = %s"
    id = (1,)

    cursor = connection.cursor()
    cursor.execute(sql_Query, id)
    record = cursor.fetchone()

    # selecting column value into varible
    price = float(record[0])
    print("Laptop price is : ", price)

except mysql.connector.Error as error:
    print("Failed to get record from database: {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:14 AM, 11/28/2020] Vinod Sir: # Python MySQL Update Example to update a record of a table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()

    print("Before updating a record ")
    sql_select_query = """select * from Laptop where id = 6"""
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

    # Update single record now
    sql_update_query = """Update Laptop set Price = 101499 where id = 6"""
    cursor.execute(sql_update_query)
    connection.commit()
    print("Record Updated successfully ")

    print("After updating record ")
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

except mysql.connector.Error as error:
    print("Failed to update table record: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:14 AM, 11/28/2020] Vinod Sir: # Use a Python variable in an Update query to update MySQL table
import mysql.connector
from mysql.connector import Error

def updateLaptopPrice(id, price):
    try:
        connection = mysql.connector.connect(host='localhost',
                                             database='Electronics',
                                             user='user1',
                                             password='user123')

        cursor = connection.cursor()
        sql_update_query = """Update Laptop set price = %s where id = %s"""
        inputData = (price, id)
        cursor.execute(sql_update_query, inputData)
        connection.commit()
        print("Record Updated successfully ")

    except mysql.connector.Error as error:
        print("Failed to update record to database: {}".format(error))
    finally:
        if (connection.is_connected()):
            cursor.close()
            connection.close()
            print("MySQL connection is closed")

updateLaptopPrice(4, 45000)
updateLaptopPrice(5, 145000)
[11:15 AM, 11/28/2020] Vinod Sir: # Python MySQL update Multiple Rows data in a single query
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Price = %s where id = %s"""

    # multiple records to be updated in tuple format
    records_to_update = [(30000, 3), (28750, 4)]
    cursor.executemany(sql_update_query, records_to_update)
    connection.commit()

    print(cursor.rowcount, "Records of a laptop table updated successfully")

except mysql.connector.Error as error:
    print("Failed to update records to database: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:15 AM, 11/28/2020] Vinod Sir: # Python update multiple Columns of MySQL table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Name = %s, Price = %s where id = %s"""

    name = "HP Pavilion"
    price = 28200
    id = 4
    input = (name, price, id)

    cursor.execute(sql_update_query, input)
    connection.commit()
    print("Multiple column updated successfully ")

except mysql.connector.Error as error:
    print("Failed to update record to database: {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:15 AM, 11/28/2020] Vinod Sir: # Python Update Datetime and timestamp column of a MySQL table

import mysql.connector
from mysql.connector import Error
from datetime import datetime

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')

    cursor = connection.cursor()
    sql_update_query = """Update Laptop set Purchase_date = %s where id = %s"""

    current_Date = datetime.now()
    formatted_date = current_Date.strftime('%Y-%m-%d')
    id = 2
    input = (formatted_date, id)
    cursor.execute(sql_update_query, input)
    connection.commit()
    print("Purchased Date Updated successfully ")

except mysql.connector.Error as error:
    print("Failed to update purchased date {}".format(error))

finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("connection is closed")
[11:16 AM, 11/28/2020] Vinod Sir: # Python example to delete a single row from the MySQL table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    print("Displaying laptop record Before Deleting it")

    
    sql_select_query = """select * from Laptop where id = 7"""
    cursor.execute(sql_select_query)
    record = cursor.fetchone()
    print(record)

    sql_Delete_query = """Delete from Laptop where id = 7"""
    cursor.execute(sql_Delete_query)
    connection.commit()

    cursor.execute(sql_select_query)
    records = cursor.fetchall()
    
    if len(records) == 0:
        print("\nRecord Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to delete record from table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:16 AM, 11/28/2020] Vinod Sir: # Use Python variable in a parameterized query
#  to delete a row from MySQL table
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host='localhost',
                                         database='Electronics',
                                         user='user1',
                                         password='user123')
    cursor = connection.cursor()
    sql_Delete_query = """Delete from Laptop where id = %s"""
    laptopId = 6
    cursor.execute(sql_Delete_query, (laptopId,))
    connection.commit()
    print("Record Deleted successfully ")

except mysql.connector.Error as error:
    print("Failed to Delete record from table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
[11:16 AM, 11/28/2020] Vinod Sir: # Python Delete multiple rows from a MySQL table
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode

try:
    connection = mysql.connector.connect(host='localhost',
                                   database='Electronics',
                                   user='user1',
                                   password='user123')

    cursor = connection.cursor()
    sql_Delete_query = """Delete from Laptop where id = %s"""
    records_to_delete = [(5,), (4,)]
    cursor.executemany(sql_Delete_query, records_to_delete)
    connection.commit()
    print(cursor.rowcount, " Record Deleted successfully")

except mysql.connector.Error as error:
    print("Failed to Delete records from MySQL table: {}".format(error))
finally:
    if (connection.is_connected()):
        cursor.close()
        connection.close()
        print("MySQL connection is closed")